name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Add a timeout for the entire job (e.g., 30 minutes)
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3 # Use actions/cache to speed up dependency installation
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero on success, provide a failure if errors were found
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      - name: Run a dummy train/infer/eval sequence (conceptual check)
        # This is a very light check, not full training
        run: |
          # The examples/basic_raw_generation.py script will now produce
          # aperture_llm_model_epoch_50.pt based on the updated config.
          # We need to make sure the script itself is up-to-date with this expectation.
          # The provided examples/basic_raw_generation.py already handles this change.
          python examples/basic_raw_generation.py
